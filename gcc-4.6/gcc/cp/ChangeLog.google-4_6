2011-12-19  Sterling Augustine <saugustine@google.com>

	Backport from google/main

	* error.c (dump_decl): Reformat return value to "(anonymous namespace)".
	(lang_decl_name): Return "(anonymous namespace)" when appropriate.

2011-12-17  Easwaran Raman  <eraman@google.com>
	Backport r182443 from google/main.

	2011-12-17   Easwaran Raman  <eraman@google.com>
	
		* decl.c (cxx_init_decl_processing): Specify a function that
		  takes a void* and size_t for DELETE_EXPR.
		* call.c (build_op_delete_call): If fsized-delete is used, use
		  the variant that takes size_t as the second parameter except
		  when deleteting a pointer of type void *.

2011-12-06  Jeffrey Yasskin  <jyasskin@google.com>

	Backport from rev 180707

	2011-10-31  Jason Merrill  <jason@redhat.com>

		PR c++/50920
		* class.c (check_field_decl): Change c++0x in diags to c++11.
		* error.c (maybe_warn_cpp0x): Likewise.
		* parser.c (cp_parser_diagnose_invalid_type_name): Likewise.
		* pt.c (check_default_tmpl_args): Likewise.

2011-11-18  Paolo Carlini  <paolo.carlini@oracle.com>

	PR c++/51150
	* pt.c (tsubst_copy_and_build): Handle FIX_TRUNC_EXPR.

2011-11-02  Jeffrey Yasskin  <jyasskin@google.com>

	Backport from rev 176665

	2011-07-22  Jason Merrill  <jason@redhat.com>

		PR c++/49793
		* typeck2.c (check_narrowing): Downgrade permerror to pedwarn.
		Make conditional on -Wnarrowing.

2011-10-28  Jeffrey Yasskin  <jyasskin@google.com>

        google ref 5514746; backport of r179121

	Modified locally to only block static const literals in -pedantic
	mode.

	2011-09-23  Paolo Carlini  <paolo.carlini@oracle.com>

		PR c++/50258
		* decl.c (check_static_variable_definition): Allow in-class
		initialization of static data member of non-integral type in
		permissive mode.

2011-09-29  DeLesley Hutchins  <delesley@google.com>

     * cp/parser.c  (cp_parser_late_parsing_attribute_arg_lists)
        fixed case where the potential clone is a template.

2011-09-22  Paolo Carlini  <paolo.carlini@oracle.com>

	Backport r179110 from gcc-4_6-branch.

	* semantics.c (potential_constant_expression_1): Handle USING_DECL.

2011-9-13  DeLesley Hutchins  <delesley@google.com>

      * class.c (cp_get_virtual_function_decl): bugfix where
        type is uknown

2011-08-18   Diego Novillo  <dnovillo@google.com>

	* name-lookup.c (lookup_arg_dependent): Use conditional
	timevars.
	* decl.c (xref_tag): Likewise.
	* call.c (build_op_call): Likewise.

2011-08-12  Xinliang David Li  <davidxl@google.com>

	* class.c (update_vtable_entry_for_fn): Set lost_primary
	bit properly.

2011-04-15   Le-Chun Wu  <lcwu@google.com>

	* decl2.c (cp_check_const_attributes): Handle unparsed lock attribute 
	arguments.
	* parser.c (cp_parser_attribute_list): Don't save tokens when argument
	list of a lock attribute is empty.
	* semantics.c (cxx_eval_constant_expression): Handle unexpected
	FIELD_DECL gracefully.

Copyright (C) 2011 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
